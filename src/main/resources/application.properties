
#logging.level.root=debug

#===CONFIGURE H2===
#spring.h2.console.enabled=true
#spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1;
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.jpa.defer-datasource-initialization=true


#===CONFIGURE MYSQL===
#spring.datasource.url=jdbc:mysql://localhost:3306/blogAPI
#spring.datasource.username=root
#spring.datasource.password=gwwz0909xy
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver




#===CONFIGURE HIBERNATE===
#create the table automatically if not exists
#spring.jpa.hibernate.ddl-auto = update   
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect



spring.batch.job.enabled = false
spring.datasource.url=jdbc:postgresql://localhost:5432/blogapi
spring.datasource.username=postgres
spring.datasource.password=gwwz0909xy
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.show-sql=true


#===CONFIGURE SPRING SECURITY===
#customise the credential for OOTB form based basic authentification 
#This part is NOT needed as user has configured in SecurityConfig class
#By default, spring security form login is enabled
#By default, spring security's HTTP basic authentication support is enabled


#spring.security.user.name=user
#spring.security.user.password=test
#spring.security.user.roles=ADMIN

#===CONFIGURE JWT TOKEN=====
#app.jwt-secret=javaguides using sha256online tools
#app.jwt-expiration-milliseconds using google search convert mili sec to days
#expire in 7 days so convert 7 days to mili sec
app.jwt-secret=daf66e01593f61a15b857cf433aae03a005812b31234e149036bcc8dee755dbb
app.jwt-expiration-milliseconds=604800000





